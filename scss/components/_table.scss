// Component :: Table


// Table of contents
// - Base
// - Styles
// - States



// Base
.c-table {
  @include normalize-margin;
  margin-bottom: space(md);
  width: 100%;


  th {
    border-bottom: $HS-border;
    color: $HS-color-text-subtle;
    font-weight: $HS-font-weight-normal;
    padding: space(sm);
    text-align: left;
  }

  td {
    border-top: $HS-border;
    padding: space(sm);
    word-break: normal;

    &:only-of-type {
      width: 100%;
    }
  }
}



// Styles
.c-table--fixed {
  table-layout: fixed;
}

.c-table--bordered {
  border: $HS-border-dark;
  border-collapse: separate;
  border-left: 0;
  border-radius: $HS-border-radius;

  th {
    background-color: $HS-color-background-light;
    border-bottom: none;
    border-left: $HS-border-dark;

    &:first-child {
      border-top-left-radius: $HS-border-radius;
    }

    &:last-child {
      border-top-right-radius: $HS-border-radius;
    }
  }

  td {
    border-top: $HS-border-dark;
    border-left: $HS-border-dark;
  }
}

.c-table--condensed {
  td {
    padding-bottom: space(xs);
    padding-top: space(xs);
  }
}

.c-table--striped {
  tbody {
    tr:nth-child(odd) {
      & > td,
      & > th {
        background-color: $HS-color-background-lighter;
      }
    }
  }
}

.c-table--hover {
  tbody {
    tr {
      &:hover {
        & > td,
        & > th {
          background-color: $HS-color-background-light;
        }
      }
    }
  }
}



// States
.c-table tr {
  &.is-error {
    td,
    th {
      background-color: $HS-color-error-background;
    }
  }

  &.is-inactive {
    td,
    th {
      background-color: $HS-color-inactive-background;
      color: $HS-color-text-subtle;
    }
  }

  &.is-success {
    td,
    th {
      background-color: $HS-color-success-background;
    }
  }

  &.is-warning {
    td,
    th {
      background-color: $HS-color-warning-background;
    }
  }
}
