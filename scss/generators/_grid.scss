// Generators :: Grid

// Source: Bootstrap V4
// https://github.com/twbs/bootstrap/tree/v4-dev

@mixin generate-container-max() {
  @each $breakpoint, $width in $HS-container-max-widths {
    @include breakpoint-up($breakpoint, $HS-breakpoints) {
      max-width: $width;
    }
  }
}

@mixin generate-row($gutter: $HS-grid-gutter) {
  .o-row{
    @if $HS-config-enable-flex {
      @include display(flex);
      @include flex-wrap(wrap);
    }
    @else {
      @include clearfix();
    }
    margin-left: -(ceil($gutter / 2));
    margin-right: -(ceil($gutter / 2));
  }
}

@mixin generate-col($size, $columns: $HS-grid-columns, $gutter: $HS-grid-gutter) {
  @if $HS-config-enable-flex {
    @include flex(0 0 percentage($size / $columns));
    // Add a `max-width` to ensure content within each column does not blow out
    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
    // do not appear to require this.
    max-width: percentage($size / $columns);
  }
  @else {
    width: percentage($size / $columns);
  }
}

@mixin generate-col-offset($size, $columns: $HS-grid-columns) {
  margin-left: percentage($size / $columns);
}

@mixin generate-col-push($size, $columns: $HS-grid-columns) {
  left: if($size > 0, percentage($size / $columns), auto);
}

@mixin generate-col-pull($size, $columns: $HS-grid-columns) {
  right: if($size > 0, percentage($size / $columns), auto);
}

@mixin generate-col-modifier($type, $size, $columns) {
  // Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)
  @if $type == push {
    @include generate-col-push($size, $columns);
  } @else if $type == pull {
    @include generate-col-pull($size, $columns);
  } @else if $type == offset {
    @include generate-col-offset($size, $columns);
  }
}


@mixin generate-grid-columns($columns: $HS-grid-columns, $gutter: $HS-grid-gutter, $breakpoints: $HS-breakpoints) {
  $breakpoint-counter: 0;
  @each $breakpoint in map-keys($breakpoints) {
    $breakpoint-counter: ($breakpoint-counter + 1);
    $_class: o-col;

    @for $i from 1 through $columns {
      .#{$_class}-#{$breakpoint}-#{$i} {
        @if $HS-config-enable-flex {
          @extend %HS-col-flex;
        }
        @else {
          @extend %HS-col-float;
        }
      }
    }

    @include breakpoint-up($breakpoint, $breakpoints) {
      @for $i from 1 through $columns {
        .#{$_class}-#{$breakpoint}-#{$i} {
          @include generate-col($i, $columns, $gutter);
        }
      }

      // @each $modifier in (pull, push) {
      //   @for $i from 0 through $columns {
      //     .#{$_class}-#{$modifier}-#{$breakpoint}-#{$i} {
      //       @include generate-col-modifier($modifier, $i, $columns)
      //     }
      //   }
      // }

      // `$columns - 1` because offsetting by the width of an entire row isn't possible
      @for $i from 0 through ($columns - 1) {
        @if $breakpoint-counter != 1 or $i != 0 { // Avoid emitting useless .col-xs-offset-0
          .#{$_class}-#{$breakpoint}-offset-#{$i} {
            @include generate-col-modifier(offset, $i, $columns)
          }
        }
      }
    }
  }
}
